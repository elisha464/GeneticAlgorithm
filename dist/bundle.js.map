{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Chromosome.ts","webpack:///./src/ChromosomeFitnessCalculator.ts","webpack:///./src/Circle.ts","webpack:///./src/Color.ts","webpack:///./src/CustomRenderer.ts","webpack:///./src/FitnessedChromosome.ts","webpack:///./src/index.ts","webpack:///./src/webgl/CircleTextureBuilder.ts","webpack:///./src/webgl/WebGLChromosomeRenderer.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;ACnEA,wEAA6B;AAE7B;IACI,YAA0B,OAAiB;QAAjB,YAAO,GAAP,OAAO,CAAU;IAAG,CAAC;IAExC,MAAM,CAAC,MAAc;QACxB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IAChD,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC/D,CAAC;IAEM,MAAM,CAAC,mBAAmB,CAAC,IAAY;QAC1C,MAAM,aAAa,GAAa,EAAE,CAAC;QACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE;YAAE,aAAa,CAAC,IAAI,CAAC,gBAAM,CAAC,eAAe,EAAE,CAAC,CAAC;QAC5E,OAAO,IAAI,UAAU,CAAC,aAAa,CAAC,CAAC;IACzC,CAAC;IAEM,MAAM,CAAC,WAAW,CAAC,EAAc,EAAE,EAAc;QACpD,IAAI,EAAE,CAAC,OAAO,CAAC,MAAM,KAAK,EAAE,CAAC,OAAO,CAAC,MAAM;YAAE,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAC3F,MAAM,OAAO,GAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC;QAC1C,MAAM,YAAY,GAAG,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC3D,MAAM,OAAO,GAAa,EAAE,CAAC;QAC7B,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE;YAAE,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;QACnF,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;CACJ;AAzBD,6BAyBC;;;;;;;;;;;;;;;;;;;;;;;ACxBD;IACI,YAAoB,QAA6B,EAAU,IAAe;QAAtD,aAAQ,GAAR,QAAQ,CAAqB;QAAU,SAAI,GAAJ,IAAI,CAAW;IAAG,CAAC;IAEjE,gBAAgB,CAAC,UAAsB,EAAE,QAAiB,KAAK;;YACxE,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1E,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YAChC,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;YAChF,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAChC,IAAI,WAAW,GAAG,CAAC,CAAC;YACpB,IAAI,MAAM,GAAG,CAAC,CAAC;YAEf,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAEf,mCAAmC;YACnC,yCAAyC;YACzC,yCAAyC;YACzC,yCAAyC;YACzC,yCAAyC;YACzC,+CAA+C;YAC/C,IAAI;YAEJ,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,EAAE;gBACnC,WAAW,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC/C,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAI,KAAK,EAAE,GAAG,EAAE,EAAE;oBACnC,CAAC,GAAG,QAAQ,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC1F,CAAC,GAAG,QAAQ,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC1F,CAAC,GAAG,QAAQ,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC1F,CAAC,GAAG,QAAQ,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;oBAE1F,MAAM,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;iBAC3C;aACJ;YAED,OAAO,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,GAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;QACrD,CAAC;KAAA;CACJ;AApCD,8CAoCC;;;;;;;;;;;;;;;ACvCD,qEAA2B;AAE3B;IACI,YACY,KAAa,CAAC,EACd,KAAa,CAAC,EACd,UAAkB,CAAC,EACnB,SAAgB,IAAI,eAAK,EAAE;QAH3B,OAAE,GAAF,EAAE,CAAY;QACd,OAAE,GAAF,EAAE,CAAY;QACd,YAAO,GAAP,OAAO,CAAY;QACnB,WAAM,GAAN,MAAM,CAAqB;IAAG,CAAC;IAE3C,IAAW,CAAC;QACR,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,IAAW,CAAC;QACR,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,IAAW,KAAK;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAEO,cAAc;QAClB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QACxB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IAEO,YAAY;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;IACvC,CAAC;IAEO,WAAW;QACf,IAAI,CAAC,MAAM,GAAG,eAAK,CAAC,cAAc,EAAE,CAAC;IACzC,CAAC;IAEM,MAAM,CAAC,MAAc;QACxB,IAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,MAAM,EAAE;YAC7B,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;QAED,IAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,MAAM,EAAE;YAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;QAED,IAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,MAAM,EAAE;YAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;IACL,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/D,CAAC;IAEM,MAAM,CAAC,eAAe;QACzB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,eAAK,CAAC,cAAc,EAAE,CAAC,CAAC;IACjG,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC;IACnE,CAAC;CACJ;AA7DD,yBA6DC;;;;;;;;;;;;;;;AC/DD;IACI,YAA2B,KAAK,CAAC,EAAU,KAAK,CAAC,EAAU,KAAK,CAAC,EAAU,KAAK,CAAC;QAAtD,OAAE,GAAF,EAAE,CAAI;QAAU,OAAE,GAAF,EAAE,CAAI;QAAU,OAAE,GAAF,EAAE,CAAI;QAAU,OAAE,GAAF,EAAE,CAAI;QAC7E,MAAM,WAAW,GAAG,CAAC,CAAS,EAAE,GAAW,EAAE,GAAW,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAC5F,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACvD,CAAC;IAEM,MAAM,CAAC,cAAc;QACxB,MAAM,OAAO,GAAG,CAAC,CAAS,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;QAC7D,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,IAAW,CAAC;QACR,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,IAAW,CAAC;QACR,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,IAAW,CAAC;QACR,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,IAAW,CAAC;QACR,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAEM,WAAW;QACd,OAAO,QAAQ,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAC,GAAG,GAAG,CAAC;IAClE,CAAC;CACJ;AAjCD,wBAiCC;;;;;;;;;;;;;;;;;;;;;;;AC9BD,sBAAsB,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;IAChE,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AAC/D,CAAC;AAED;IAGI,YAAoB,mBAA6C,IAAI;QAAjD,qBAAgB,GAAhB,gBAAgB,CAAiC;IAAG,CAAC;IAEjE,WAAW,CAAC,UAAsB,EAAE,KAAa,EAAE,MAAc,EAAE,GAAW,EAAE,GAAW;QAC/F,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/C,MAAM,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;YACxC,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC;YAChE,MAAM,OAAO,GAAG,UAAU,CAAC,CAAC,GAAG,KAAK;YACpC,MAAM,OAAO,GAAG,UAAU,CAAC,CAAC,GAAG,MAAM;YACrC,IAAI,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,YAAY,EAAE;gBAC9D,0IAA0I;gBACtI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;gBAClE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;gBAClE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;gBAClE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;aACrE;SACJ;IAEL,CAAC;IAEY,MAAM,CAAC,UAAsB,EAAE,KAAa,EAAE,MAAc;;YACrE,IAAI,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC;YAExC,KAAI,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,EAAE;gBAClC,KAAI,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,GAAG,EAAE,EAAE;oBACjC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC;iBACxD;aACJ;YAED,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACvB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;aACtD;QACL,CAAC;KAAA;IAEM,YAAY,CAAC,KAAa,EAAE,MAAc;QAC7C,OAAO,IAAI,CAAC,IAAI;IACpB,CAAC;CACJ;AAvCD,4BAuCC;;;;;;;;;;;;;;;AC3CD;IACI,YAAmB,UAAsB,EAAS,OAAe;QAA9C,eAAU,GAAV,UAAU,CAAY;QAAS,YAAO,GAAP,OAAO,CAAQ;IACjE,CAAC;CACJ;AAHD,sCAGC;;;;;;;;;;;;;;;;;;;;;;;ACLD,oFAAsC;AACtC,uIAAwE;AACxE,uIAAsE;AACtE,gGAA6C;AAE7C,+GAAwD;AAExD,IAAI,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACvD,IAAI,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACvD,IAAI,gBAAgB,GAAG,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAC3D,IAAI,gBAAgB,GAAG,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACxD,IAAI,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AAEvC,MAAO,CAAC,SAAS,GAAG,UAAS,SAA2B;IAC1D,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QAAE,OAAO;IAEhC,IAAI,GAAG,GAAqB,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC3D,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAElD,GAAG,CAAC,MAAM,GAAG;;YACT,IAAI,CAAC,GAAsB,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YAC/D,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC3B,iCAAiC;YAEjC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;YAEtB,eAAe,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;YAClC,eAAe,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;YAEpC,eAAe,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;YAClC,eAAe,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;YACpC,gBAAgB,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACtC,IAAI,aAAa,GAAI,gBAAgB,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;YAC5E,gBAAgB,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;YAEpD,uDAAuD;YACvD,MAAM,YAAY,GAAG,IAAI,wBAAc,CAAC,CAAC,CAAC,CAAC;YAC3C,2DAA2D;YAC3D,MAAM,gBAAgB,GAAG,IAAI,wBAAc,EAAE,CAAC;YAC9C,MAAM,WAAW,GAAG,IAAI,qCAA2B,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAC;YACrF,MAAM,cAAc,GAAG,EAAE,CAAC;YAE1B,IAAI,cAAc,GAAG,EAAE,CAAC;YACxB,IAAI,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAC,CAAC,CAAC,CAAC;YACxD,IAAI,UAAU,GAAG,CAAC,CAAC;YAEnB,IAAI,UAAU,GAA0B,EAAE,CAAC;YAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;gBACrC,MAAM,gBAAgB,GAAG,oBAAU,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC;gBACxE,MAAM,OAAO,GAAG,MAAM,WAAW,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,gBAAgB,YAAY,iCAAuB,CAAC,CAAC;gBAC1H,UAAU,CAAC,IAAI,CAAC,IAAI,6BAAmB,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC,CAAC;aACvE;YACD,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;YAEjD;;oBACI,IAAI,aAAa,GAA0B,EAAE,CAAC;oBAE9C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;wBACpC,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,cAAc,CAAC,GAAG,oBAAoB,CAAC,CAAC;wBAC3F,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,cAAc,CAAC,GAAG,oBAAoB,CAAC,CAAC;wBAC3F,MAAM,aAAa,GAAG,oBAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;wBAC/E,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;wBAC1B,MAAM,OAAO,GAAG,MAAM,WAAW,CAAC,gBAAgB,CAAC,aAAa,EAAE,gBAAgB,YAAY,iCAAuB,CAAC,CAAC;wBACvH,aAAa,CAAC,IAAI,CAAC,IAAI,6BAAmB,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,CAAC;qBACvE;oBAED,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;oBACpD,UAAU,GAAG,aAAa,CAAC;oBAC3B,UAAU,EAAE,CAAC;oBACb,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;oBACjE,IAAI,gBAAgB,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,GAAC,GAAG,CAAC,CAAC,CAAC;oBAC1F,KAAK,CAAC,SAAS,GAAG,CAAC,WAAW,GAAG,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,oBAAoB,GAAG,UAAU,CAAC,CAAC;oBAElG,IAAG,UAAU,GAAG,IAAI,EAAE;wBAClB,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC;qBAC3C;yBAAM;wBACH,qBAAqB,CAAC,KAAK,CAAC,CAAC;qBAChC;gBACL,CAAC;aAAA;YAED,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC;YACrC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC;KAAA;AACL,CAAC;;;;;;;;;;;;;;;ACrFD;IACI;IAEA,CAAC;IAEO,WAAW,CAAC,CAAS;QACzB,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAEO,YAAY,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;QAC/D,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAC,EAAE,CAAC,GAAG,CAAC,EAAE,GAAC,EAAE,CAAC,GAAG,CAAC,EAAE,GAAC,EAAE,CAAC,GAAG,CAAC,EAAE,GAAC,EAAE,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,KAAK,CAAC,WAAmB;QACrB,IAAG,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;QAExF,IAAI,MAAM,GAAG,IAAI,SAAS,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QAErD,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,EAAE,GAAG,EAAE,EAAE;YACxC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,EAAE,GAAG,EAAE,EAAE;gBACxC,IAAI,GAAG,GAAG,CAAC,CAAC;gBACZ,IAAI,CAAC,GAAG,GAAG,GAAG,WAAW,GAAG,CAAC,CAAC;gBAC9B,IAAI,CAAC,GAAG,GAAG,GAAG,WAAW,GAAG,CAAC,CAAC;gBAC9B,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,GAAG;oBAAE,GAAG,GAAG,GAAG,CAAC;gBAEvE,IAAI,UAAU,GAAG,CAAC,GAAG,GAAG,WAAW,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC/C,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;gBAChC,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;gBAChC,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;gBAChC,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;aACrC;SACJ;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;AAnCD,uCAmCC;;;;;;;;;;;;;;;;;;;;;;;ACjCD,wHAA0D;AAG1D,MAAM,UAAU,GAAG,CAAC,GAAe,EAAE,UAAsB,EAAE,EAAE;IAC3D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAChD,MAAM,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAE1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB,GAAG,CAAC,CAAC,GAAC,EAAE,GAAG,CAAC,GAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;YAC9B,GAAG,CAAC,CAAC,GAAC,EAAE,GAAG,CAAC,GAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;YAC9B,GAAG,CAAC,CAAC,GAAC,EAAE,GAAG,CAAC,GAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;YAC9B,GAAG,CAAC,CAAC,GAAC,EAAE,GAAG,CAAC,GAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;SACjC;KACJ;AACL,CAAC,CAAC;AAEF;IAwCI,YAAoB,gBAAuC;QAAvC,qBAAgB,GAAhB,gBAAgB,CAAuB;QAvCnD,aAAQ,GAAG;;;;;;;;;;;;;;;MAejB,CAAC;QAEK,aAAQ,GAAG;;;;;;;;;MASjB,CAAC;QAcC,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjF,CAAC;IAEO,KAAK;QACT,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACjC,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtE,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE1E,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC;QACxC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;QAClD,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;QACpD,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAEnC,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,WAAW,CAAC,EAAE;YAC7D,MAAM,IAAI,KAAK,CAAC,2CAA2C,GAAG,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;SAC3G;QAED,IAAI,CAAC,WAAW,GAAG;YACf,eAAe,EAAE;gBACb,cAAc,EAAE,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,EAAE,iBAAiB,CAAC;gBAC3E,YAAY,EAAE,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,EAAE,eAAe,CAAC;gBACvE,WAAW,EAAE,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,EAAE,cAAc,CAAC;aACxE;YACD,gBAAgB,EAAE;gBACd,UAAU,EAAE,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,aAAa,CAAC;gBACpE,QAAQ,EAAE,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,UAAU,CAAC;aAClE;SACJ,CAAC;QAEF,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC;QACxC,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAClD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,aAAa,EAAE,IAAI,8BAAoB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3G,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,qBAAqB,CAAC,CAAC;QACjF,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QAEjC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;QACxC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QACpD,EAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAClG,EAAE,CAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;QAE5E,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;QACxC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QACpD,EAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAChG,EAAE,CAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QAE1E,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;QACzC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACrD,EAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,aAAa,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACvG,EAAE,CAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;IAC7E,CAAC;IAEO,UAAU,CAAC,IAAY,EAAE,MAAc;QAC3C,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACjC,MAAM,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACrC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAChC,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAEzB,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,MAAM,EAAE,EAAE,CAAC,cAAc,CAAC,EAAE;YACnD,MAAM,YAAY,GAAG,2CAA2C,GAAG,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;YAC/F,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACxB,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;SACjC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAEU,MAAM,CAAC,UAAsB,EAAE,KAAa,EAAE,MAAc;;YACrE,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACjC,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAElC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YACpB,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,mBAAmB,CAAC,CAAC;YAE7C,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC;YAC9B,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YAGjC,MAAM,mBAAmB,GAAG,CAAC,CAAS,EAAY,EAAE;gBAChD,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;gBACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;gBACvB,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;gBAClD,OAAO;oBACH,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM;oBACtB,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM;oBACtB,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM;oBACtB,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM;oBACtB,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM;oBACtB,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM;iBACzB,CAAC;YACN,CAAC,CAAC;YAEF,MAAM,SAAS,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAE5F,MAAM,SAAS,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAEtE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAChD,SAAS,CAAC,CAAC,GAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC1B,SAAS,CAAC,CAAC,GAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC1B,SAAS,CAAC,CAAC,GAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC1B,SAAS,CAAC,CAAC,GAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC1B,SAAS,CAAC,CAAC,GAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC1B,SAAS,CAAC,CAAC,GAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC1B,SAAS,CAAC,CAAC,GAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC1B,SAAS,CAAC,CAAC,GAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC1B,SAAS,CAAC,CAAC,GAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC1B,SAAS,CAAC,CAAC,GAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC1B,SAAS,CAAC,CAAC,GAAC,EAAE,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC;gBAC3B,SAAS,CAAC,CAAC,GAAC,EAAE,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC;aAC9B;YAED,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACrE,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;YAEnC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YACpD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,YAAY,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;YAE5E,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YACpD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;YAE1D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YACrD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;YAE3D,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;YAC9B,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YAElD,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAClC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;YAC7E,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YAE5D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAClE,CAAC;KAAA;IAED,YAAY,CAAC,KAAa,EAAE,MAAc;QACtC,MAAM,MAAM,GAAG,IAAI,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAC5C,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QAC/H,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;AApLD,0CAoLC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import Circle from './Circle'\r\n\r\nexport default class Chromosome {\r\n    public constructor(public circles: Circle[]) {}\r\n\r\n    public mutate(chance: number): void {\r\n        this.circles.forEach(c => c.mutate(chance));\r\n    }\r\n\r\n    public getClone(): Chromosome {\r\n        return new Chromosome(this.circles.map(c => c.getClone()));\r\n    }\r\n\r\n    public static getRandomChromosome(size: number): Chromosome {\r\n        const randomCircles: Circle[] = [];\r\n        for (let i = 0; i < size; i++) randomCircles.push(Circle.getRandomCircle());\r\n        return new Chromosome(randomCircles);\r\n    }\r\n\r\n    public static fromParents(c1: Chromosome, c2: Chromosome): Chromosome {\r\n        if (c1.circles.length !== c2.circles.length) throw new Error('Parents are not compatible');\r\n        const loopMax: number = c1.circles.length;\r\n        const randomParent = () => (Math.random() < 0.5) ? c1 : c2;\r\n        const circles: Circle[] = [];\r\n        for (let i=0; i < loopMax; i++) circles.push(randomParent().circles[i].getClone());\r\n        return new Chromosome(circles);\r\n    }\r\n}","import IChromosomeRenderer from \"./interfaces/IChromosomeRenderer\";\r\nimport Chromosome from \"./Chromosome\";\r\n\r\nexport default class ChromosomeFitnessCalculator {\r\n    constructor(private renderer: IChromosomeRenderer, private base: ImageData) {}\r\n\r\n    public async calculateFitness(chromosome: Chromosome, flipY: boolean = false): Promise<number> {\r\n        await this.renderer.render(chromosome, this.base.width, this.base.height);\r\n        const baseData = this.base.data;\r\n        const data = this.renderer.getImageData(this.base.width, this.base.height).data;\r\n        const width = this.base.width;\r\n        const height = this.base.height;\r\n        let comparedRow = 0;\r\n        let result = 0;\r\n\r\n        let r, g, b, a;\r\n\r\n        // for (let i=0; i < len; i += 4) {\r\n        //     r = baseData[i + 0] - data[i + 0];\r\n        //     g = baseData[i + 1] - data[i + 1];\r\n        //     b = baseData[i + 2] - data[i + 2];\r\n        //     a = baseData[i + 3] - data[i + 3];\r\n        //     result += (r*r) + (g*g) + (b*b) + (a*a);\r\n        // }\r\n\r\n        for (let row = 0; row < height; row++) {\r\n            comparedRow = (flipY ? height - 1 - row : row);\r\n            for (let col = 0; col <  width; col++) {\r\n                r = baseData[row * width * 4 + col * 4 + 0] - data[comparedRow * width * 4 + col * 4 + 0];\r\n                g = baseData[row * width * 4 + col * 4 + 1] - data[comparedRow * width * 4 + col * 4 + 1];\r\n                b = baseData[row * width * 4 + col * 4 + 2] - data[comparedRow * width * 4 + col * 4 + 2];\r\n                a = baseData[row * width * 4 + col * 4 + 3] - data[comparedRow * width * 4 + col * 4 + 3];\r\n\r\n                result += (r*r) + (g*g) + (b*b) + (a*a);\r\n            }\r\n        }\r\n\r\n        return (width * height * 4 * (255*255)) - result;\r\n    }\r\n}","import Color from './Color'\r\n\r\nexport default class Circle {\r\n    public constructor(\r\n        private _x: number = 0, \r\n        private _y: number = 0, \r\n        private _radius: number = 0, \r\n        private _color: Color = new Color()) {}\r\n\r\n    public get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    public get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    public get radius(): number {\r\n        return this._radius;\r\n    }\r\n\r\n    public get color(): Color {\r\n        return this._color;\r\n    }\r\n\r\n    private mutateLocation(): void {\r\n        this._x = Math.random();\r\n        this._y = Math.random();\r\n    }\r\n\r\n    private mutateRadius(): void {\r\n        this._radius = Math.random() * 0.3;\r\n    }\r\n\r\n    private mutateColor(): void {\r\n        this._color = Color.getRandomColor();\r\n    }\r\n\r\n    public mutate(chance: number): void {\r\n        if(Math.random() * 100 < chance) {\r\n            this.mutateLocation();\r\n        }\r\n\r\n        if(Math.random() * 100 < chance) {\r\n            this.mutateRadius();\r\n        }\r\n\r\n        if(Math.random() * 100 < chance) {\r\n            this.mutateColor();\r\n        }\r\n    }\r\n\r\n    public getClone(): Circle {\r\n        return new Circle(this.x, this.y, this.radius, this.color);\r\n    }\r\n\r\n    public static getRandomCircle(): Circle {\r\n        return new Circle(Math.random(), Math.random(), Math.random() * 0.3, Color.getRandomColor());\r\n    }\r\n\r\n    public toString(): string {\r\n        return `(${this.x}, ${this.y}, ${this.radius}, ${this.color})`;\r\n    }\r\n}","export default class Color {\r\n    public constructor(private _r = 0, private _g = 0, private _b = 0, private _a = 0) {\r\n        const limitNumber = (n: number, min: number, max: number) => Math.max(min, Math.min(max, n))\r\n        this._r = Math.floor(limitNumber(this._r, 0, 255));\r\n        this._g = Math.floor(limitNumber(this._g, 0, 255));\r\n        this._b = Math.floor(limitNumber(this._b, 0, 255));\r\n        this._a = Math.floor(limitNumber(this._a, 0, 255));\r\n    }\r\n\r\n    public static getRandomColor(): Color {\r\n        const randInt = (n: number) => Math.floor(Math.random() * n);\r\n        return new Color(randInt(256), randInt(256), randInt(256), randInt(256));\r\n    }\r\n\r\n    public get r(): number {\r\n        return this._r;\r\n    }\r\n\r\n    public get g(): number {\r\n        return this._g;\r\n    }\r\n\r\n    public get b(): number {\r\n        return this._b;\r\n    }\r\n\r\n    public get a(): number {\r\n        return this._a;\r\n    }\r\n\r\n    public toCssString(): string {\r\n        return `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a/255})`;\r\n    }\r\n}","import IChromosomeRenderer from \"./interfaces/IChromosomeRenderer\";\r\nimport Chromosome from \"./Chromosome\";\r\n\r\nfunction calcDistance(x1: number, y1: number, x2: number, y2: number) {\r\n    return Math.sqrt((x1 - x2)*(x1 - x2) + (y1 - y2)*(y1 - y2))\r\n}\r\n\r\nexport default class implements IChromosomeRenderer {\r\n    private data : ImageData\r\n\r\n    constructor(private renderingContext: CanvasRenderingContext2D = null) {}\r\n\r\n    private renderPixel(chromosome: Chromosome, width: number, height: number, row: number, col: number): void {\r\n        for(let i = 0; i < chromosome.circles.length; i++) {\r\n            const currCircle = chromosome.circles[i]\r\n            const scaledRadius = currCircle.radius * Math.min(width, height)\r\n            const scaledX = currCircle.x * width\r\n            const scaledY = currCircle.y * height\r\n            if (calcDistance(col, row, scaledX, scaledY) <= scaledRadius) {\r\n            // if (scaledX - scaledRadius <= col && col <= scaledX + scaledRadius && scaledY - scaledRadius <= row && row <= scaledY + scaledRadius) {\r\n                this.data.data[row * width * 4 + col * 4 + 0] = currCircle.color.r\r\n                this.data.data[row * width * 4 + col * 4 + 1] = currCircle.color.g\r\n                this.data.data[row * width * 4 + col * 4 + 2] = currCircle.color.b\r\n                this.data.data[row * width * 4 + col * 4 + 3] = currCircle.color.a\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    public async render(chromosome: Chromosome, width: number, height: number): Promise<void> {\r\n        this.data = new ImageData(width, height)\r\n\r\n        for(let row = 0; row < height; row++) {\r\n            for(let col = 0; col < width; col++) {\r\n                this.renderPixel(chromosome, width, height, row, col)\r\n            }\r\n        }\r\n\r\n        if (this.renderingContext) {\r\n            this.renderingContext.putImageData(this.data, 0, 0)\r\n        }\r\n    }\r\n\r\n    public getImageData(width: number, height: number): ImageData {\r\n        return this.data\r\n    }\r\n}","import Chromosome from \"./Chromosome\";\r\nimport ChromosomeFitnessCalculator from \"./ChromosomeFitnessCalculator\";\r\n\r\nexport default class FitnessedChromosome {\r\n    constructor(public chromosome: Chromosome, public fitness: number) {\r\n    }\r\n}","import Canvas2DChromosomeRenderer from './Canvas2DChromosomeRenderer';\r\nimport Chromosome from './Chromosome';\r\nimport ChromosomeFitnessCalculator from './ChromosomeFitnessCalculator';\r\nimport WebGLChromosomeRenderer from './webgl/WebGLChromosomeRenderer';\r\nimport CustomRenderer from './CustomRenderer'\r\nimport CircleTextureBuilder from './webgl/CircleTextureBuilder';\r\nimport FitnessedChromosome from './FitnessedChromosome';\r\n\r\nlet inMemoryCanvas1 = document.createElement('canvas');\r\nlet inMemoryCanvas2 = document.createElement('canvas');\r\nlet inMemoryContext1 = inMemoryCanvas1.getContext('webgl');\r\nlet inMemoryContext2 = inMemoryCanvas2.getContext('2d');\r\nvar stats = document.getElementById('stats');\r\n\r\n(<any>window).loadImage = function(fileInput: HTMLInputElement) {\r\n    if (!fileInput.files[0]) return;\r\n\r\n    let img = <HTMLImageElement>document.getElementById('img');\r\n    img.src = URL.createObjectURL(fileInput.files[0]);\r\n\r\n    img.onload = async function() {\r\n        var c = <HTMLCanvasElement>document.getElementById('myCanvas');\r\n        let t = c.getContext('2d');\r\n        // let t = c.getContext('webgl');\r\n\r\n        c.width = img.width;\r\n        c.height = img.height;\r\n\r\n        inMemoryCanvas1.width = img.width;\r\n        inMemoryCanvas1.height = img.height;\r\n\r\n        inMemoryCanvas2.width = img.width;\r\n        inMemoryCanvas2.height = img.height;\r\n        inMemoryContext2.drawImage(img, 0, 0);\r\n        var baseImageData =  inMemoryContext2.getImageData(0, 0, c.width, c.height);\r\n        inMemoryContext2.clearRect(0, 0, c.width, c.height);\r\n\r\n        // const mainRenderer = new WebGLChromosomeRenderer(t);\r\n        const mainRenderer = new CustomRenderer(t);\r\n        // const inMemoryRenderer = new WebGLChromosomeRenderer(t);\r\n        const inMemoryRenderer = new CustomRenderer();\r\n        const fitnessCalc = new ChromosomeFitnessCalculator(inMemoryRenderer, baseImageData);\r\n        const chromosomeSize = 50;\r\n\r\n        var populationSize = 30;\r\n        var BestPopulationCutOff = Math.floor(populationSize/4);\r\n        var generation = 0;\r\n\r\n        let population: FitnessedChromosome[] = [];\r\n        for (let i = 0; i < populationSize; i++) {\r\n            const randomChromosome = Chromosome.getRandomChromosome(chromosomeSize);\r\n            const fitness = await fitnessCalc.calculateFitness(randomChromosome, inMemoryRenderer instanceof WebGLChromosomeRenderer);\r\n            population.push(new FitnessedChromosome(randomChromosome, fitness));\r\n        }\r\n        population.sort((a, b) => b.fitness - a.fitness);\r\n\r\n        async function start() {\r\n            var newPopulation: FitnessedChromosome[] = [];\r\n            \r\n            for(let i = 0; i < populationSize; i++) {   \r\n                const arg1 = population[Math.floor(Math.random() * populationSize) % BestPopulationCutOff];\r\n                const arg2 = population[Math.floor(Math.random() * populationSize) % BestPopulationCutOff];\r\n                const newChromosome = Chromosome.fromParents(arg1.chromosome, arg2.chromosome);\r\n                newChromosome.mutate(0.1);\r\n                const fitness = await fitnessCalc.calculateFitness(newChromosome, inMemoryRenderer instanceof WebGLChromosomeRenderer);\r\n                newPopulation.push(new FitnessedChromosome(newChromosome, fitness));\r\n            }\r\n            \r\n            newPopulation.sort((a, b) => b.fitness - a.fitness);\r\n            population = newPopulation;\r\n            generation++;\r\n            mainRenderer.render(population[0].chromosome, c.width, c.height);\r\n            let fitnessInPercent = 100 * population[0].fitness / (c.width * c.height * 4 * (255*255));\r\n            stats.innerHTML = ('fitness: ' + fitnessInPercent.toFixed(2) + '<br />Generation: ' + generation);\r\n\r\n            if(generation > 1000) {\r\n                console.timeEnd(\"1000 generations took\")\r\n            } else {\r\n                requestAnimationFrame(start);\r\n            }\r\n        }\r\n\r\n        console.time(\"1000 generations took\")\r\n        requestAnimationFrame(start);\r\n    }\r\n}","export default class CircleTextureBuilder {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    private checkPowOf2(n: number): boolean {\r\n        return n && (n & (n-1)) === 0;\r\n    }\r\n\r\n    private calcDistance(x1: number, y1: number, x2: number, y2: number): number {\r\n        return Math.sqrt((x2-x1) * (x2-x1) + (y2-y1) * (y2-y1));\r\n    }\r\n\r\n    build(textureSize: number): ImageData {\r\n        if(!this.checkPowOf2(textureSize)) throw new Error(\"Texture Size Must Be A Power Of 2\");\r\n\r\n        let result = new ImageData(textureSize, textureSize);\r\n\r\n        for (let row = 0; row < textureSize; row++) {\r\n            for (let col = 0; col < textureSize; col++) {\r\n                let val = 0;\r\n                let x = col - textureSize / 2;\r\n                let y = row - textureSize / 2;\r\n                if (this.calcDistance(x, y, 0, 0) < (textureSize / 2) * 0.9) val = 255;\r\n\r\n                let pixelIndex = (row * textureSize + col) * 4;\r\n                result.data[pixelIndex + 0] = 0;\r\n                result.data[pixelIndex + 1] = 0;\r\n                result.data[pixelIndex + 2] = 0;\r\n                result.data[pixelIndex + 3] = val;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}","import IChromosomeRenderer from \"../interfaces/IChromosomeRenderer\";\r\nimport Chromosome from \"../Chromosome\";\r\nimport CircleTextureBuilder from \"./CircleTextureBuilder\";\r\nimport Circle from \"../Circle\";\r\n\r\nconst fillColols = (arr: Uint8Array, chromosome: Chromosome) => {\r\n    for (let i = 0; i < chromosome.circles.length; i++) {\r\n        const color = chromosome.circles[i].color;\r\n\r\n        for (let j = 0; j < 6; j++) {\r\n            arr[i*24 + j*4 + 0] = color.r;\r\n            arr[i*24 + j*4 + 1] = color.g;\r\n            arr[i*24 + j*4 + 2] = color.b;\r\n            arr[i*24 + j*4 + 3] = color.a;\r\n        }\r\n    }\r\n};\r\n\r\nexport default class WebGLChromosomeRenderer implements IChromosomeRenderer {\r\n    private vsSource = `\r\n    attribute vec4 aVertexPosition;\r\n    attribute vec2 aTextureCoord;\r\n    attribute vec4 aVertexColor;\r\n\r\n    uniform vec2 uResolution;\r\n\r\n    varying highp vec2 vTextureCoord;\r\n    varying highp vec4 vVertexColor;\r\n\r\n    void main() {\r\n        vec4 scaledPosition = aVertexPosition * vec4(2.0 / uResolution.x, 2.0 / uResolution.y, 1.0, 1.0);\r\n        gl_Position = scaledPosition + vec4(-1.0, -1.0, 0.0, 0.0);\r\n        vTextureCoord = aTextureCoord;\r\n        vVertexColor = aVertexColor;\r\n    }`;\r\n\r\n    private fsSource = `\r\n    varying highp vec2 vTextureCoord;\r\n    varying highp vec4 vVertexColor;\r\n\r\n    uniform sampler2D uSampler;\r\n\r\n    void main() {\r\n        gl_FragColor = vVertexColor / 255.0;\r\n        gl_FragColor *= texture2D(uSampler, vTextureCoord).a;\r\n    }`;\r\n\r\n    private shaderProgram: WebGLProgram;\r\n    private circleTexture: WebGLTexture;\r\n\r\n    private positionBuffer: WebGLBuffer;\r\n    private texCoordBuffer: WebGLBuffer;\r\n    private vertColorBuffer: WebGLBuffer;\r\n\r\n    private programInfo: any;\r\n\r\n    private insideCanvasContext: CanvasRenderingContext2D;\r\n\r\n    constructor(private renderingContext: WebGLRenderingContext) {\r\n        this.setup();\r\n        this.insideCanvasContext = document.createElement('canvas').getContext('2d');\r\n    }\r\n\r\n    private setup(): void {\r\n        const gl = this.renderingContext;\r\n        const vertexShader = this.loadShader(gl.VERTEX_SHADER, this.vsSource);\r\n        const fragmentShader = this.loadShader(gl.FRAGMENT_SHADER, this.fsSource);\r\n\r\n        this.shaderProgram = gl.createProgram();\r\n        gl.attachShader(this.shaderProgram, vertexShader);\r\n        gl.attachShader(this.shaderProgram, fragmentShader);\r\n        gl.linkProgram(this.shaderProgram);\r\n\r\n        if (!gl.getProgramParameter(this.shaderProgram, gl.LINK_STATUS)) {\r\n            throw new Error('Unable to initialize the shader program: ' + gl.getProgramInfoLog(this.shaderProgram));\r\n        }\r\n\r\n        this.programInfo = {\r\n            attribLocations: {\r\n                vertexPosition: gl.getAttribLocation(this.shaderProgram, 'aVertexPosition'),\r\n                textureCoord: gl.getAttribLocation(this.shaderProgram, 'aTextureCoord'),\r\n                vertexColor: gl.getAttribLocation(this.shaderProgram, 'aVertexColor')\r\n            },\r\n            uniformLocations: {\r\n                resolution: gl.getUniformLocation(this.shaderProgram, 'uResolution'),\r\n                uSampler: gl.getUniformLocation(this.shaderProgram, 'uSampler')\r\n            },\r\n        };\r\n\r\n        this.circleTexture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, this.circleTexture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, new CircleTextureBuilder().build(256));\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\r\n        gl.generateMipmap(gl.TEXTURE_2D);\r\n\r\n        this.positionBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\r\n        gl.vertexAttribPointer(this.programInfo.attribLocations.vertexPosition, 2, gl.FLOAT, false, 0, 0);\r\n        gl.enableVertexAttribArray(this.programInfo.attribLocations.vertexPosition);\r\n\r\n        this.texCoordBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.texCoordBuffer);\r\n        gl.vertexAttribPointer(this.programInfo.attribLocations.textureCoord, 2, gl.FLOAT, false, 0, 0);\r\n        gl.enableVertexAttribArray(this.programInfo.attribLocations.textureCoord);\r\n\r\n        this.vertColorBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertColorBuffer);\r\n        gl.vertexAttribPointer(this.programInfo.attribLocations.vertexColor, 4, gl.UNSIGNED_BYTE, false, 0, 0);\r\n        gl.enableVertexAttribArray(this.programInfo.attribLocations.vertexColor);\r\n    }\r\n\r\n    private loadShader(type: number, source: string): WebGLShader {\r\n        const gl = this.renderingContext;\r\n        const shader = gl.createShader(type);\r\n        gl.shaderSource(shader, source);\r\n        gl.compileShader(shader);\r\n\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            const errorMessage = 'An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader);\r\n            gl.deleteShader(shader);\r\n            throw new Error(errorMessage);\r\n        }\r\n      \r\n        return shader;\r\n      }\r\n\r\n    public async render(chromosome: Chromosome, width: number, height: number): Promise<void> {\r\n        const gl = this.renderingContext;\r\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        gl.viewport(0, 0, width, height);\r\n\r\n\r\n        const positionsFromCircle = (c: Circle): number[] => {\r\n            const x = c.x * width;\r\n            const y = c.y * height;\r\n            const radius = c.radius * Math.min(width, height);\r\n            return [\r\n                x - radius, y - radius,\r\n                x + radius, y - radius,\r\n                x - radius, y + radius,\r\n                x + radius, y + radius,\r\n                x + radius, y - radius,\r\n                x - radius, y + radius\r\n            ];\r\n        };\r\n\r\n        const positions = chromosome.circles.reduce((a, b) => a.concat(positionsFromCircle(b)), []);\r\n\r\n        const texCoords = new Float32Array(chromosome.circles.length * 6 * 2);\r\n\r\n        for (let i = 0; i < chromosome.circles.length; i++) {\r\n            texCoords[i*12 + 0] = 0.0;\r\n            texCoords[i*12 + 1] = 0.0;\r\n            texCoords[i*12 + 2] = 1.0;\r\n            texCoords[i*12 + 3] = 0.0;\r\n            texCoords[i*12 + 4] = 0.0;\r\n            texCoords[i*12 + 5] = 1.0;\r\n            texCoords[i*12 + 6] = 1.0;\r\n            texCoords[i*12 + 7] = 1.0;\r\n            texCoords[i*12 + 8] = 1.0;\r\n            texCoords[i*12 + 9] = 0.0;\r\n            texCoords[i*12 + 10] = 0.0;\r\n            texCoords[i*12 + 11] = 1.0;\r\n        }\r\n\r\n        const vertColors = new Uint8Array(chromosome.circles.length * 6 * 4);\r\n        fillColols(vertColors, chromosome);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.texCoordBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, texCoords, gl.STATIC_DRAW);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertColorBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, vertColors, gl.STATIC_DRAW);\r\n\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.circleTexture);\r\n\r\n        gl.useProgram(this.shaderProgram);\r\n        gl.uniform2fv(this.programInfo.uniformLocations.resolution, [width, height]);\r\n        gl.uniform1i(this.programInfo.uniformLocations.uSampler, 0);\r\n\r\n        gl.drawArrays(gl.TRIANGLES, 0, 6 * chromosome.circles.length);\r\n    }\r\n\r\n    getImageData(width: number, height: number): ImageData {\r\n        const result = new ImageData(width, height);\r\n        const buffer = new Uint8Array(result.data.buffer);\r\n        this.renderingContext.readPixels(0, 0, width, height, this.renderingContext.RGBA, this.renderingContext.UNSIGNED_BYTE, buffer);\r\n        return result;\r\n    }\r\n}"],"sourceRoot":""}