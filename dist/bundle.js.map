{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Canvas2DChromosomeRenderer.ts","webpack:///./src/Chromosome.ts","webpack:///./src/ChromosomeFitnessCalculator.ts","webpack:///./src/Circle.ts","webpack:///./src/Color.ts","webpack:///./src/index.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;AChEA;IACI,oCAAoB,gBAA0C;QAA1C,qBAAgB,GAAhB,gBAAgB,CAA0B;IAAG,CAAC;IAE3D,2CAAM,GAAb,UAAc,UAAsB,EAAE,KAAa,EAAE,MAAc;QAAnE,iBAQC;QAPG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QACrD,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,WAAC;YACxB,KAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC;YAClC,KAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;YACrD,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YACzG,KAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,iDAAY,GAAnB,UAAoB,KAAa,EAAE,MAAc;QAC7C,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IACnE,CAAC;IACL,iCAAC;AAAD,CAAC;;;;;;;;;;;;;;;;ACnBD,sEAA6B;AAE7B;IACI,oBAA0B,OAAiB;QAAjB,YAAO,GAAP,OAAO,CAAU;IAAG,CAAC;IAExC,2BAAM,GAAb,UAAc,MAAc;QACxB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAhB,CAAgB,CAAC,CAAC;IAChD,CAAC;IAEM,6BAAQ,GAAf;QACI,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,EAAE,EAAZ,CAAY,CAAC,CAAC,CAAC;IAC/D,CAAC;IAEa,8BAAmB,GAAjC,UAAkC,IAAY;QAC1C,IAAM,aAAa,GAAa,EAAE,CAAC;QACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE;YAAE,aAAa,CAAC,IAAI,CAAC,gBAAM,CAAC,eAAe,EAAE,CAAC,CAAC;QAC5E,OAAO,IAAI,UAAU,CAAC,aAAa,CAAC,CAAC;IACzC,CAAC;IAEa,sBAAW,GAAzB,UAA0B,EAAc,EAAE,EAAc;QACpD,IAAI,EAAE,CAAC,OAAO,CAAC,MAAM,KAAK,EAAE,CAAC,OAAO,CAAC,MAAM;YAAE,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAC3F,IAAM,OAAO,GAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC;QAC1C,IAAM,YAAY,GAAG,cAAM,QAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAA/B,CAA+B,CAAC;QAC3D,IAAM,OAAO,GAAa,EAAE,CAAC;QAC7B,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE;YAAE,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;QACnF,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IACL,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;ACxBD;IACI,qCAAoB,QAA6B,EAAU,IAAe;QAAtD,aAAQ,GAAR,QAAQ,CAAqB;QAAU,SAAI,GAAJ,IAAI,CAAW;IAAG,CAAC;IAEvE,sDAAgB,GAAvB,UAAwB,UAAsB;QAC1C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QACnE,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;QAChF,IAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACnD,IAAI,MAAM,GAAG,CAAC,CAAC;QAEf,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAEf,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE;YAC3B,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACxC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACxC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACxC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACxC,MAAM,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;SAC3C;QAED,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;IACtC,CAAC;IACL,kCAAC;AAAD,CAAC;;;;;;;;;;;;;;;;ACxBD,mEAA2B;AAE3B;IACI,gBACY,EAAc,EACd,EAAc,EACd,OAAmB,EACnB,MAA2B;QAH3B,2BAAc;QACd,2BAAc;QACd,qCAAmB;QACnB,sCAAoB,eAAK,EAAE;QAH3B,OAAE,GAAF,EAAE,CAAY;QACd,OAAE,GAAF,EAAE,CAAY;QACd,YAAO,GAAP,OAAO,CAAY;QACnB,WAAM,GAAN,MAAM,CAAqB;IAAG,CAAC;IAE3C,sBAAW,qBAAC;aAAZ;YACI,OAAO,IAAI,CAAC,EAAE,CAAC;QACnB,CAAC;;;OAAA;IAED,sBAAW,qBAAC;aAAZ;YACI,OAAO,IAAI,CAAC,EAAE,CAAC;QACnB,CAAC;;;OAAA;IAED,sBAAW,0BAAM;aAAjB;YACI,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,yBAAK;aAAhB;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;;;OAAA;IAEO,+BAAc,GAAtB;QACI,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QACxB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IAEO,6BAAY,GAApB;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;IACvC,CAAC;IAEO,4BAAW,GAAnB;QACI,IAAI,CAAC,MAAM,GAAG,eAAK,CAAC,cAAc,EAAE,CAAC;IACzC,CAAC;IAEM,uBAAM,GAAb,UAAc,MAAc;QACxB,IAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,MAAM,EAAE;YAC7B,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;QAED,IAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,MAAM,EAAE;YAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;QAED,IAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,MAAM,EAAE;YAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;IACL,CAAC;IAEM,yBAAQ,GAAf;QACI,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/D,CAAC;IAEa,sBAAe,GAA7B;QACI,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,eAAK,CAAC,cAAc,EAAE,CAAC,CAAC;IACjG,CAAC;IAEM,yBAAQ,GAAf;QACI,OAAO,MAAI,IAAI,CAAC,CAAC,UAAK,IAAI,CAAC,CAAC,UAAK,IAAI,CAAC,MAAM,UAAK,IAAI,CAAC,KAAK,MAAG,CAAC;IACnE,CAAC;IACL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;AC/DD;IACI,eAA2B,EAAM,EAAU,EAAM,EAAU,EAAM,EAAU,EAAM;QAAtD,2BAAM;QAAU,2BAAM;QAAU,2BAAM;QAAU,2BAAM;QAAtD,OAAE,GAAF,EAAE,CAAI;QAAU,OAAE,GAAF,EAAE,CAAI;QAAU,OAAE,GAAF,EAAE,CAAI;QAAU,OAAE,GAAF,EAAE,CAAI;QAC7E,IAAM,WAAW,GAAG,UAAC,CAAS,EAAE,GAAW,EAAE,GAAW,IAAK,WAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAA/B,CAA+B;QAC5F,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,CAAC;IAEa,oBAAc,GAA5B;QACI,IAAM,OAAO,GAAG,UAAC,CAAS,IAAK,WAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,EAA7B,CAA6B,CAAC;QAC7D,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IAC9E,CAAC;IAED,sBAAW,oBAAC;aAAZ;YACI,OAAO,IAAI,CAAC,EAAE,CAAC;QACnB,CAAC;;;OAAA;IAED,sBAAW,oBAAC;aAAZ;YACI,OAAO,IAAI,CAAC,EAAE,CAAC;QACnB,CAAC;;;OAAA;IAED,sBAAW,oBAAC;aAAZ;YACI,OAAO,IAAI,CAAC,EAAE,CAAC;QACnB,CAAC;;;OAAA;IAED,sBAAW,oBAAC;aAAZ;YACI,OAAO,IAAI,CAAC,EAAE,CAAC;QACnB,CAAC;;;OAAA;IAEM,wBAAQ,GAAf;QACI,OAAO,UAAQ,IAAI,CAAC,CAAC,UAAK,IAAI,CAAC,CAAC,UAAK,IAAI,CAAC,CAAC,UAAK,IAAI,CAAC,CAAC,MAAG,CAAC;IAC9D,CAAC;IACL,YAAC;AAAD,CAAC;;;;;;;;;;;;;;;;ACjCD,kIAAsE;AACtE,kFAAsC;AACtC,qIAAwE;AAGxE,IAAI,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACvD,IAAI,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACvD,IAAI,gBAAgB,GAAG,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAC3D,IAAI,gBAAgB,GAAG,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACxD,IAAI,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AAEvC,MAAO,CAAC,SAAS,GAAG,UAAS,SAA2B;IAC1D,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QAAE,OAAO;IAEhC,IAAI,GAAG,GAAqB,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC3D,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAElD,GAAG,CAAC,MAAM,GAAG;QACT,IAAI,CAAC,GAAsB,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAC/D,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC3B,iCAAiC;QAEjC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QAEtB,eAAe,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;QAClC,eAAe,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QAEpC,eAAe,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;QAClC,eAAe,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QACpC,gBAAgB,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACtC,IAAI,aAAa,GAAI,gBAAgB,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;QAC5E,gBAAgB,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;QAEpD,0EAA0E;QAC1E,IAAM,gBAAgB,GAAG,IAAI,oCAA0B,CAAC,gBAAgB,CAAC,CAAC;QAC1E,IAAM,WAAW,GAAG,IAAI,qCAA2B,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAC;QACrF,IAAM,cAAc,GAAG,EAAE,CAAC;QAE1B,IAAI,cAAc,GAAG,EAAE,CAAC;QACxB,IAAI,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAC,CAAC,CAAC,CAAC;QACxD,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnB,IAAI,UAAU,GAAiB,EAAE,CAAC;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE;YAAE,UAAU,CAAC,IAAI,CAAC,oBAAU,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC,CAAC;QACzG,UAAU,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,kBAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAjE,CAAiE,CAAC,CAAC;QAE7F;YACI,IAAI,aAAa,GAAiB,EAAE,CAAC;YAErC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;gBACpC,IAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,cAAc,CAAC,GAAG,oBAAoB,CAAC,CAAC;gBAC3F,IAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,cAAc,CAAC,GAAG,oBAAoB,CAAC,CAAC;gBAC3F,IAAM,aAAa,GAAG,oBAAU,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACzD,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC1B,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACrC;YAED,aAAa,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,kBAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAjE,CAAiE,CAAC,CAAC;YAChG,UAAU,GAAG,aAAa,CAAC;YAC3B,UAAU,EAAE,CAAC;YACb,gBAAgB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;YAC1D,CAAC,CAAC,YAAY,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACvE,IAAI,gBAAgB,GAAG,GAAG,GAAG,WAAW,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,GAAC,GAAG,CAAC,CAAC,CAAC;YAChH,KAAK,CAAC,SAAS,GAAG,CAAC,WAAW,GAAG,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,oBAAoB,GAAG,UAAU,CAAC,CAAC;QACtG,CAAC;QAED,+GAA+G;QAC/G,4GAA4G;QAC5G,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IAC3B,CAAC;AACL,CAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import IChromosomeRenderer from \"./interfaces/IChromosomeRenderer\";\r\nimport Chromosome from \"./Chromosome\";\r\n\r\nexport default class Canvas2DChromosomeRenderer implements IChromosomeRenderer {\r\n    constructor(private renderingContext: CanvasRenderingContext2D) {}\r\n\r\n    public render(chromosome: Chromosome, width: number, height: number): void {\r\n        this.renderingContext.clearRect(0, 0, width, height);\r\n        chromosome.circles.forEach(c => {\r\n            this.renderingContext.beginPath();\r\n            this.renderingContext.fillStyle = c.color.toString();\r\n            this.renderingContext.arc(c.x * width, c.y * height, c.radius * Math.min(width, height), 0, Math.PI * 2);\r\n            this.renderingContext.fill();\r\n        });\r\n    }\r\n\r\n    public getImageData(width: number, height: number): ImageData {\r\n        return this.renderingContext.getImageData(0, 0, width, height);\r\n    }\r\n}","import Circle from './Circle'\r\n\r\nexport default class Chromosome {\r\n    public constructor(public circles: Circle[]) {}\r\n\r\n    public mutate(chance: number): void {\r\n        this.circles.forEach(c => c.mutate(chance));\r\n    }\r\n\r\n    public getClone(): Chromosome {\r\n        return new Chromosome(this.circles.map(c => c.getClone()));\r\n    }\r\n\r\n    public static getRandomChromosome(size: number): Chromosome {\r\n        const randomCircles: Circle[] = [];\r\n        for (let i = 0; i < size; i++) randomCircles.push(Circle.getRandomCircle());\r\n        return new Chromosome(randomCircles);\r\n    }\r\n\r\n    public static fromParents(c1: Chromosome, c2: Chromosome): Chromosome {\r\n        if (c1.circles.length !== c2.circles.length) throw new Error('Parents are not compatible');\r\n        const loopMax: number = c1.circles.length;\r\n        const randomParent = () => (Math.random() < 0.5) ? c1 : c2;\r\n        const circles: Circle[] = [];\r\n        for (let i=0; i < loopMax; i++) circles.push(randomParent().circles[i].getClone());\r\n        return new Chromosome(circles);\r\n    }\r\n}","import IChromosomeRenderer from \"./interfaces/IChromosomeRenderer\";\r\nimport Chromosome from \"./Chromosome\";\r\n\r\nexport default class ChromosomeFitnessCalculator {\r\n    constructor(private renderer: IChromosomeRenderer, private base: ImageData) {}\r\n\r\n    public calculateFitness(chromosome: Chromosome): number {\r\n        this.renderer.render(chromosome, this.base.width, this.base.height)\r\n        const data = this.renderer.getImageData(this.base.width, this.base.height).data;\r\n        const len = this.base.width * this.base.height * 4;\r\n        let result = 0;\r\n\r\n        let r, g, b, a;\r\n\r\n        for (let i=0; i < len; i += 4) {\r\n            r = this.base.data[i + 0] - data[i + 0];\r\n            g = this.base.data[i + 1] - data[i + 1];\r\n            b = this.base.data[i + 2] - data[i + 2];\r\n            a = this.base.data[i + 3] - data[i + 3];\r\n            result += (r*r) + (g*g) + (b*b) + (a*a);\r\n        }\r\n\r\n        return (len * (255*255)) - result;\r\n    }\r\n}","import Color from './Color'\r\n\r\nexport default class Circle {\r\n    public constructor(\r\n        private _x: number = 0, \r\n        private _y: number = 0, \r\n        private _radius: number = 0, \r\n        private _color: Color = new Color()) {}\r\n\r\n    public get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    public get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    public get radius(): number {\r\n        return this._radius;\r\n    }\r\n\r\n    public get color(): Color {\r\n        return this._color;\r\n    }\r\n\r\n    private mutateLocation(): void {\r\n        this._x = Math.random();\r\n        this._y = Math.random();\r\n    }\r\n\r\n    private mutateRadius(): void {\r\n        this._radius = Math.random() * 0.3;\r\n    }\r\n\r\n    private mutateColor(): void {\r\n        this._color = Color.getRandomColor();\r\n    }\r\n\r\n    public mutate(chance: number): void {\r\n        if(Math.random() * 100 < chance) {\r\n            this.mutateLocation();\r\n        }\r\n\r\n        if(Math.random() * 100 < chance) {\r\n            this.mutateRadius();\r\n        }\r\n\r\n        if(Math.random() * 100 < chance) {\r\n            this.mutateColor();\r\n        }\r\n    }\r\n\r\n    public getClone(): Circle {\r\n        return new Circle(this.x, this.y, this.radius, this.color);\r\n    }\r\n\r\n    public static getRandomCircle(): Circle {\r\n        return new Circle(Math.random(), Math.random(), Math.random() * 0.3, Color.getRandomColor());\r\n    }\r\n\r\n    public toString(): string {\r\n        return `(${this.x}, ${this.y}, ${this.radius}, ${this.color})`;\r\n    }\r\n}","export default class Color {\r\n    public constructor(private _r = 0, private _g = 0, private _b = 0, private _a = 0) {\r\n        const limitNumber = (n: number, min: number, max: number) => Math.max(min, Math.min(max, n))\r\n        this._r = Math.floor(limitNumber(this._r, 0, 255));\r\n        this._g = Math.floor(limitNumber(this._g, 0, 255));\r\n        this._b = Math.floor(limitNumber(this._b, 0, 255));\r\n        this._a = limitNumber(this._a, 0, 1);\r\n    }\r\n\r\n    public static getRandomColor(): Color {\r\n        const randInt = (n: number) => Math.floor(Math.random() * n);\r\n        return new Color(randInt(256), randInt(256), randInt(256), Math.random());\r\n    }\r\n\r\n    public get r(): number {\r\n        return this._r;\r\n    }\r\n\r\n    public get g(): number {\r\n        return this._g;\r\n    }\r\n\r\n    public get b(): number {\r\n        return this._b;\r\n    }\r\n\r\n    public get a(): number {\r\n        return this._a;\r\n    }\r\n\r\n    public toString(): string {\r\n        return `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})`;\r\n    }\r\n}","import Canvas2DChromosomeRenderer from './Canvas2DChromosomeRenderer';\r\nimport Chromosome from './Chromosome';\r\nimport ChromosomeFitnessCalculator from './ChromosomeFitnessCalculator';\r\nimport WebGLChromosomeRenderer from './WebGLChromosomeRenderer';\r\n\r\nlet inMemoryCanvas1 = document.createElement('canvas');\r\nlet inMemoryCanvas2 = document.createElement('canvas');\r\nlet inMemoryContext1 = inMemoryCanvas1.getContext('webgl');\r\nlet inMemoryContext2 = inMemoryCanvas2.getContext('2d');\r\nvar stats = document.getElementById('stats');\r\n\r\n(<any>window).loadImage = function(fileInput: HTMLInputElement) {\r\n    if (!fileInput.files[0]) return;\r\n\r\n    let img = <HTMLImageElement>document.getElementById('img');\r\n    img.src = URL.createObjectURL(fileInput.files[0]);\r\n\r\n    img.onload = function() {\r\n        var c = <HTMLCanvasElement>document.getElementById('myCanvas');\r\n        let t = c.getContext('2d');\r\n        // let t = c.getContext('webgl');\r\n\r\n        c.width = img.width;\r\n        c.height = img.height;\r\n\r\n        inMemoryCanvas1.width = img.width;\r\n        inMemoryCanvas1.height = img.height;\r\n\r\n        inMemoryCanvas2.width = img.width;\r\n        inMemoryCanvas2.height = img.height;\r\n        inMemoryContext2.drawImage(img, 0, 0);\r\n        var baseImageData =  inMemoryContext2.getImageData(0, 0, c.width, c.height);\r\n        inMemoryContext2.clearRect(0, 0, c.width, c.height);\r\n\r\n        // const inMemoryRenderer = new WebGLChromosomeRenderer(inMemoryContext1);\r\n        const inMemoryRenderer = new Canvas2DChromosomeRenderer(inMemoryContext2);\r\n        const fitnessCalc = new ChromosomeFitnessCalculator(inMemoryRenderer, baseImageData);\r\n        const chromosomeSize = 50;\r\n\r\n        var populationSize = 50;\r\n        var BestPopulationCutOff = Math.floor(populationSize/4);\r\n        var generation = 0;\r\n\r\n        let population: Chromosome[] = [];\r\n        for (let i = 0; i < populationSize; i++) population.push(Chromosome.getRandomChromosome(chromosomeSize));\r\n        population.sort((a, b) => fitnessCalc.calculateFitness(b) - fitnessCalc.calculateFitness(a));\r\n\r\n        function start() {\r\n            var newPopulation: Chromosome[] = [];\r\n            \r\n            for(let i = 0; i < populationSize; i++) {   \r\n                const arg1 = population[Math.floor(Math.random() * populationSize) % BestPopulationCutOff];\r\n                const arg2 = population[Math.floor(Math.random() * populationSize) % BestPopulationCutOff];\r\n                const newChromosome = Chromosome.fromParents(arg1, arg2);\r\n                newChromosome.mutate(0.1);\r\n                newPopulation.push(newChromosome);\r\n            }\r\n            \r\n            newPopulation.sort((a, b) => fitnessCalc.calculateFitness(b) - fitnessCalc.calculateFitness(a));\r\n            population = newPopulation;\r\n            generation++;\r\n            inMemoryRenderer.render(population[0], c.width, c.height);\r\n            t.putImageData(inMemoryRenderer.getImageData(c.width, c.height), 0, 0);\r\n            let fitnessInPercent = 100 * fitnessCalc.calculateFitness(population[0]) / (c.width * c.height * 4 * (255*255));\r\n            stats.innerHTML = ('fitness: ' + fitnessInPercent.toFixed(2) + '<br />Generation: ' + generation);\r\n        }\r\n\r\n        // new Canvas2DChromosomeRenderer(t).render(Chromosome.getRandomChromosome(chromosomeSize), c.width, c.height);\r\n        // new WebGLChromosomeRenderer(t).render(Chromosome.getRandomChromosome(chromosomeSize), c.width, c.height);\r\n        setInterval(start, 10);\r\n    }\r\n}"],"sourceRoot":""}